# -*- coding: utf-8 -*-
"""Freecodecamp - Exercícios Pandas

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uHYU5aIq7sRH7q2OTCXTPViYSqXQCgD8
"""

import numpy as np
import pandas as pd

#criando uma série

pd.Series()

#converter uma lista em python para série em pandas

X = ['a', 'b', 'c']
print(X, type(X))

Y = pd.Series(X)
print(Y, type(Y))

#dar nome à série 

X = pd.Series(['a', 'b', 'c'])
X.name = 'Série da Cinthia'
X

#mostrar os valores da série

X = pd.Series(['a', 'b', 'c'])
X.values

#dando nomes aos índices da série

X = pd.Series(['a', 'b', 'c'])
index_names = ['Primeiro', 'Segundo', 'Terceiro']

X.index = index_names
X

#mostrar o primeiro elemento da série

X = pd.Series(['A', 'B', 'C'], index = ['Primeiro', 'Segundo', 'Terceiro'])
X['Primeiro']

#mostrar o último elemento da série

X = pd.Series(['A', 'B', 'C'], index = ['Primeiro', 'Segundo', 'Terceiro'])
X['Terceiro']

#mostrar os elementos do meio

X = pd.Series(['A', 'B', 'C'], index = ['Primeiro', 'Segundo', 'Terceiro'])
X[1:-1]

#mostrar elementos na ordem inversa

X = pd.Series(['A', 'B', 'C'], index = ['Primeiro', 'Segundo', 'Terceiro'])
X[::-1]

#mostrar o primeiro e último elementos

X = pd.Series(['A', 'B', 'C'], index = ['Primeiro', 'Segundo', 'Terceiro'])
X[[0, -1]]

#mudar de serie para float

X = pd.Series([1, 2, 3, 4, 5], index=['Primeiro', 'Segundo', 'Terceiro', 'Quarto', 'Quinto'])

pd.Series(X, dtype=np.float)

#inverter a ordem

X = pd.Series([1, 2, 3, 4, 5], 
              index=['Primeiro', 'Segundo', 'Terceiro', 'Quarto', 'Quinto'])

X[::-1]

#sort

X = pd.Series([4, 2, 3, 1, 5], index=['Quarto', 'Segundo', 'Terceiro', 'Primeiro', 'Quinto'])

X = X.sort_values()
X

#mudar o valor do quinto elemento para 10

X = pd.Series([1, 2, 3, 4, 5], index=['Primeiro', 'Segundo', 'Terceiro', 'Quarto', 'Quinto'])

X[4] = 10
X

#mudar elementos do meio para zero

X = pd.Series([1, 2, 3, 4, 5], index=['Primeiro', 'Segundo', 'Terceiro', 'Quarto', 'Quinto'])

X[1:-1] = 0
X

#adicionar o valor cinco para cada elemento

X = pd.Series([1, 2, 3, 4, 5])

X + 5

"""**Series boolean arrays**"""

X = pd.Series([-1, 2, 0, -4, 5, 6, 0, 0, -9, 10])

mask = X <= 0
mask

#pegar valores negativos

X = pd.Series([-1, 2, 0, -4, 5, 6, 0, 0, -9, 10])

mask = X <= 0
X[mask]

#pegar números maiores que cinco

X = pd.Series([-1, 2, 0, -4, 5, 6, 0, 0, -9, 10])

mask = X > 5
X[mask]

#pegar elementos maiores do que a média

X = pd.Series([-1, 2, 0, -4, 5, 6, 0, 0, -9, 10])

mask = X > X.mean()
X[mask]

#pegar números iguais a dois ou dez

X = pd.Series([-1, 2, 0, -4, 5, 6, 0, 0, -9, 10])

mask = (X == 2) | (X == 10)
X[mask]

"""**Funções lógicas**"""

#retorna true se nenhum dos elementos é zero

X = pd.Series([-1, 2, 0, -4, 5, 6, 0, 0, -9, 10])

X.all()

#retorna true se qualquer um dos elementos é zero

X = pd.Series([-1, 2, 0, -4, 5, 6, 0, 0, -9, 10])

X.any()

"""**Estatísticas**"""

X = pd.Series([-1, 2, 0, -4, 5, 6, 0, 0, -9, 10])

X.sum()

X = pd.Series([-1, 2, 0, -4, 5, 6, 0, 0, -9, 10])

X.mean()

X = pd.Series([-1, 2, 0, -4, 5, 6, 0, 0, -9, 10])

X.max()

